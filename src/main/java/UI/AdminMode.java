package UI;

import elements.Etudiant;
import elements.DB;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class AdminMode extends javax.swing.JFrame  {
     private ArrayList<Etudiant> etudiants; // Stores student data
   

    public AdminMode() {
        initComponents();
        setIconImage();
        etudiants = new ArrayList<>();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        Disconnect = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Modify = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Export = new javax.swing.JButton();
        Sort = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin Mode");
        setPreferredSize(new java.awt.Dimension(1500, 840));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(null);

        jPanel2.setLayout(null);

        jLabel7.setFont(new java.awt.Font("SF Pro Rounded", 0, 36)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Admin Mode:");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(0, 300, 390, 70);

        Disconnect.setBackground(new java.awt.Color(255, 204, 255));
        Disconnect.setFont(new java.awt.Font("SF Pro Display", 3, 14)); // NOI18N
        Disconnect.setText("<<    Disconnect");
        Disconnect.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 0, 102)));
        Disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisconnectActionPerformed(evt);
            }
        });
        jPanel2.add(Disconnect);
        Disconnect.setBounds(20, 20, 150, 30);

        jLabel6.setFont(new java.awt.Font("Source Code Pro", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("<html> Ignite Passion. <br> Inspire Excellence. <br>  Imagine Possibilities. </html>");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(0, 520, 390, 130);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Copyright Â© Sakura High School, All Rights Reserved.");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(0, 660, 390, 16);

        jLabel4.setFont(new java.awt.Font("Noto Serif Display", 1, 36)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Sakura High School");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(0, 240, 390, 60);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        jPanel2.add(jLabel3);
        jLabel3.setBounds(0, 50, 390, 220);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        jPanel2.add(jLabel1);
        jLabel1.setBounds(950, 33, 200, 200);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Admin_Screen.png"))); // NOI18N
        jPanel2.add(jLabel2);
        jLabel2.setBounds(0, 0, 440, 780);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 390, 1235);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Surname", "Date Of Birth", "Math", "Physics", "Literrature", "Science", "Chemistry", "History", "Geography", "French", "English", "German", "Score", "Mention"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1040, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(420, 80, 1040, 420);

        Modify.setBackground(new java.awt.Color(255, 204, 255));
        Modify.setFont(new java.awt.Font("SF Pro Display", 0, 14)); // NOI18N
        Modify.setText("Modify Selected Entry");
        Modify.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 153)));
        Modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyActionPerformed(evt);
            }
        });
        jPanel1.add(Modify);
        Modify.setBounds(460, 590, 180, 40);

        Delete.setBackground(new java.awt.Color(255, 204, 255));
        Delete.setFont(new java.awt.Font("SF Pro Display", 0, 14)); // NOI18N
        Delete.setText("Delete Selected Entries");
        Delete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 153)));
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        jPanel1.add(Delete);
        Delete.setBounds(930, 590, 210, 40);

        Export.setBackground(new java.awt.Color(255, 204, 255));
        Export.setFont(new java.awt.Font("SF Pro Display", 0, 14)); // NOI18N
        Export.setText("Export as CSV / PDF");
        Export.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 153)));
        Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportActionPerformed(evt);
            }
        });
        jPanel1.add(Export);
        Export.setBounds(1170, 590, 210, 40);

        Sort.setBackground(new java.awt.Color(255, 204, 255));
        Sort.setFont(new java.awt.Font("SF Pro Display", 0, 14)); // NOI18N
        Sort.setText("Sort by Highest Score");
        Sort.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 153)));
        Sort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortActionPerformed(evt);
            }
        });
        jPanel1.add(Sort);
        Sort.setBounds(680, 590, 210, 40);

        jLabel9.setFont(new java.awt.Font("SF Pro Display", 2, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("V0.0.4");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(1420, 20, 34, 16);

        jLabel8.setFont(new java.awt.Font("SF Pro Display", 1, 48)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Database Report:");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(400, 20, 1090, 50);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1498, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisconnectActionPerformed
        this.dispose();
        Login l = new Login();
        l.setVisible(true);
        l.pack();
        l.setLocationRelativeTo(null);
    }//GEN-LAST:event_DisconnectActionPerformed

    private void populateTable() {
    // Sample data (replace with your data retrieval logic)
    etudiants.add(new Etudiant("John", "doe", "02/01/2003"));
    etudiants.add(new Etudiant("carl", "johnson", "12/10/2003"));

    // Create DefaultTableModel for the table
    DefaultTableModel tableModel = new DefaultTableModel(
        new String[]{"Nom", "PrÃ©nom", "Date de Naissance", "Moyenne"}, 0);

    // Add student data to the table model
    for (Etudiant etudiant : etudiants) {
      double moyenne = etudiant.moy != null ? etudiant.moy.getMoy() : 0.0;
      tableModel.addRow(new Object[]{etudiant.getNom(), etudiant.getPrenom(), etudiant.getDateDeNaiss(), moyenne});
    }

    // Set the table model for jTable1
    jTable1.setModel(tableModel);
  }
    private void ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExportActionPerformed

    
    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
    if (selectedRow >= 0) {
      int confirmation = JOptionPane.showConfirmDialog(this, "Delete selected sturdent ?", "Confirmation", JOptionPane.YES_NO_OPTION);
      if (confirmation == JOptionPane.YES_OPTION) {
        etudiants.remove(selectedRow);
        updateTableModel();
      }
    } else {
      JOptionPane.showMessageDialog(this, "Select the student you want to remove", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_DeleteActionPerformed

// Problem with adding event listeners to buttons 
    
 //Delete.addActionListener(new  java.awt.event.ActionListener() {
        //Override
        //public void DeleteActionPerformed1(ActionEvent e) {
       //     DeleteActionPerformed(e);
       // }
   // });
//}

    private void SortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortActionPerformed
        // TODO add your handling code here:
          //Collections.sort(etudiants);
    }//GEN-LAST:event_SortActionPerformed

     public void updateStudent(Etudiant updatedEtudiant) {
    // Update the corresponding Etudiant object in the ArrayList
    int selectedRow = jTable1.getSelectedRow();
    etudiants.set(selectedRow, updatedEtudiant);

    // Update the table model with the modified data
    updateTableModel();
  }
      private void updateTableModel() {
    DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
    tableModel.setRowCount(0); // Clear existing data

    // Repopulate the table model with updated student data
    for (Etudiant etudiant : etudiants) {
      double moyenne = etudiant.moy != null ? etudiant.moy.getMoy() : 0.0;
      tableModel.addRow(new Object[]{etudiant.getNom(), etudiant.getPrenom(), etudiant.getDateDeNaiss(), moyenne});
    }

    // Refresh the table
    tableModel.fireTableDataChanged();
  }
        public void refreshTable() {
    // Clear existing data from the table model
    DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
    tableModel.setRowCount(0);

    // Fetch updated student data from database (replace with your query)
    etudiants.clear();
    Connection connection = DB.getConnection();
    try {
      Statement statement = connection.createStatement();
      ResultSet resultSet = statement.executeQuery("SELECT * FROM students");
      while (resultSet.next()) {
        String name = resultSet.getString("name");
        String surname = resultSet.getString("surname");
        String dob = resultSet.getString("dob");
        // ... (extract other student information)
        Etudiant etudiant = new Etudiant(name, surname, dob);
        // ... (set other student information like scores and average)
        etudiants.add(etudiant);
      }
      resultSet.close();
      statement.close();
      connection.close();
    } catch (SQLException ex) {
      ex.printStackTrace();
      JOptionPane.showMessageDialog(this, "Erreur lors du rechargement des donnÃ©es", "Erreur", JOptionPane.ERROR_MESSAGE);
    }

    // Repopulate the table model with updated student data
    for (Etudiant etudiant : etudiants) {
      double moyenne = etudiant.moy != null ? etudiant.moy.getMoy() : 0.0;
      tableModel.addRow(new Object[]{etudiant.getNom(), etudiant.getPrenom(), etudiant.getDateDeNaiss(), moyenne});
    }

    // Refresh the table
    tableModel.fireTableDataChanged();
  }
    private void ModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
            if (selectedRow >= 0) {
              Etudiant selectedEtudiant = etudiants.get(selectedRow);

              // display a simple dialog to edit some fields
              String newName = JOptionPane.showInputDialog(this, "Enter new name:", "Modify Student", JOptionPane.PLAIN_MESSAGE);
              String newSurname = JOptionPane.showInputDialog(this, "Enter new surname:", "Modify Student", JOptionPane.PLAIN_MESSAGE);
            
              String newdateOfBirth = JOptionPane.showInputDialog(this, "Enter new Date of birth:", "Modify Student", JOptionPane.PLAIN_MESSAGE);
              String newMathScore = JOptionPane.showInputDialog(this, "Enter new math score:", "Modify Student", JOptionPane.PLAIN_MESSAGE);
              String newPhysicsScore = JOptionPane.showInputDialog(this, "Enter new physics score:", "Modify Student", JOptionPane.PLAIN_MESSAGE);
              String newLiterraturescore = JOptionPane.showInputDialog(this, "Enter new litterature score:", "Modify Student", JOptionPane.PLAIN_MESSAGE);
              String newScienceScore = JOptionPane.showInputDialog(this, "Enter new science score:", "Modify Student", JOptionPane.PLAIN_MESSAGE);
              String newChemistryScore = JOptionPane.showInputDialog(this, "Enter new chemistry score:", "Modify Student", JOptionPane.PLAIN_MESSAGE);
              String newHistoryScore = JOptionPane.showInputDialog(this, "Enter new history score:", "Modify Student", JOptionPane.PLAIN_MESSAGE);
              String newGeographyScore = JOptionPane.showInputDialog(this, "Enter new geography score:", "Modify Student", JOptionPane.PLAIN_MESSAGE);
              String newFrenchScore = JOptionPane.showInputDialog(this, "Enter new french score:", "Modify Student", JOptionPane.PLAIN_MESSAGE);
              String newEnglishScore = JOptionPane.showInputDialog(this, "Enter new english score:", "Modify Student", JOptionPane.PLAIN_MESSAGE);
              String newGermanScore = JOptionPane.showInputDialog(this, "Enter new german score:", "Modify Student", JOptionPane.PLAIN_MESSAGE);
          
              // ... (similar prompts for other editable fields)

              // Update the selected student object with the modified values
              if (newName != null) {
                selectedEtudiant.setNom(newName);
              }
              if (newSurname != null) {
                selectedEtudiant.setPrenom(newSurname);
              }
              // ... (update other fields based on user input)

              // Update the table model with the modified data
              updateTableModel();
            } else {
              JOptionPane.showMessageDialog(this, "Select a student to modify", "Error", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_ModifyActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JButton Disconnect;
    private javax.swing.JButton Export;
    private javax.swing.JButton Modify;
    private javax.swing.JButton Sort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void setIconImage() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/db_icon.png")));
    }
}
